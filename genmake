#!/bin/bash
if [[ $1 = "help" ]]
then
	echo "+-_-_-_-_-_-_-_-_-_-_-_-_+"
	echo "| Utilisation de genmake |"
	echo "+-_-_-_-_-_-_-_-_-_-_-_-_+"
	echo -e "\nIl faut se placer à la racine du projet tel que suit :"
	echo "./auteur"
	echo "./srcs/*.c"
	echo "./includes/*.h"
	echo -e "\nPuis :"
	echo -e "genmake nom_de_l'exécutable\n"
	echo -e "Vous disposez des options suivantes :"
	echo -e "libft : pour que le makefile utilise la libft"
	echo -e "mlx   : pour que le makfile utilise les lib pour mlx"
	echo -e "lib   : pour dire au makefile que vous souhaitez faire une librairie"
	echo -e "/!\\ Cette derniere option n'est  pas compatibles avec les autres, mais le script ne vous empeche pas de les faire\n"
	echo -e "Si le fichier Makefile existe déjà, il est renommé en Makefile.back\n"
else
	while [ $# -gt 0 ]
	do
		if [ $1 = "libft" ]
		then
			LIBFT=OK
		elif [ $1 = "lib" ]
		then
			LIB=OK
		elif [ $1 = "mlx" ]
		then
			MLX=OK
		else
			OUTPUT=$1
		fi
		shift 1
	done
	NAME=Makefile
	if [ -f $NAME ]
	then
		mv $NAME $NAME.back
	fi
	touch $NAME
	~/scripts/header_42 $NAME "#"
	echo -e "\nCPATH = srcs" >> $NAME
	echo -e "HPATH = includes" >> $NAME
	if [ "$LIBFT" = "OK" ]
	then
		echo -e "LIBPATH = libft" >> $NAME
	fi
	if [ "$MLX" = "OK" ]
	then
		echo -e "MLXPATH = /usr/X11/lib" >> $NAME
	fi
	echo -e "\nNAME = $OUTPUT" >> $NAME
	if [ "$LIBFT" = "OK" ]
	then
		echo -e "LIB = \$(LIBPATH)/libft.a" >> $NAME
	fi
	echo -e "\nCC = /usr/bin/gcc" >> $NAME
	if [ "$LIB" = "OK" ]
	then
		echo -e "AR = /usr/bin/ar" >> $NAME
		echo -e "RANLIB = /usr/bin/ranlib" >> $NAME
	fi
	echo -e "RM = /bin/rm" >> $NAME
	echo -e "CFLAGS = -Wall -Wextra -Werror" >> $NAME

	SRCS=$(ls srcs | grep "\.c" | grep -v "\~")
	SRC="SRC = "
	for FILE in $SRCS
	do
		if [[ -z $MARK ]]
		then
			SRC="$SRC$FILE"
			MARK="done"
		else
			SRC="$SRC ∑\n\t$FILE"
		fi
	done
	echo -e "\n$SRC" | sed 's/∑/\\/g'>> $NAME

	echo -e "\nCFILES = \$(patsubst %,\$(CPATH)/%,\$(SRC))" >> $NAME
	echo -e "OFILES = \$(patsubst %.c,%.o,\$(CFILES))" >> $NAME

	if [ "$LIBFT" = "OK" ]
	then
		echo -e "\nall: \$(LIB) \$(NAME)" >> $NAME
	else
		echo -e "\nall: \$(NAME)" >> $NAME
	fi

	echo -e "\n\$(NAME): \$(OFILES)" >> $NAME
	echo -e "\t@echo \"Building \$(NAME)\"" >> $NAME
	if [ "$LIBFT" = "OK" ]
	then
		if [ "$MLX" = "OK" ]
		then
			echo -e "\t@\$(CC) -L \$(LIBPATH) -L \$(MLXPATH) -lft -lmlx -lXext -lX11 \$^ -o \$@" >> $NAME
		else
			echo -e "\t@\$(CC) -L \$(LIBPATH) -lft \$^ -o \$@" >> $NAME
		fi
	elif [ "$LIB" = "OK" ]
	then
		echo -e "\t@\$(AR) rc \$(NAME) \$^" >> $NAME
		echo -e "\t@\$(RANLIB) \$(NAME)" >> $NAME
	else
		echo -e "\t@\$(CC) \$^ -o \$@" >> $NAME
	fi

	echo -e "\n%.o: %.c" >> $NAME
	echo -e "\t@echo \"Creating file \$@\"" >> $NAME
	if [ "$LIBFT" = "OK" ]
	then
		echo -e "\t@\$(CC) -I \$(HPATH) -I \$(LIBPATH)/\$(HPATH) \$(CFLAGS) -c \$^ -o \$@" >> $NAME
	else
		echo -e "\t@\$(CC) -I \$(HPATH) \$(CFLAGS) -c \$^ -o \$@" >> $NAME
	fi
	echo -e "\nclean:" >> $NAME
	echo -e "\t@echo \"Deletion of building files\"" >> $NAME
	echo -e "\t@\$(RM) -f \$(OFILES)" >> $NAME

	echo -e "\nfclean: clean" >> $NAME
	echo -e "\t@echo \"Deletion of \$(NAME)\"" >> $NAME
	echo -e "\t@\$(RM) -f \$(NAME)" >> $NAME

	echo -e "\nre: fclean all" >> $NAME

	if [ "$LIBFT" = "OK" ]
	then
		echo -e "\n\$(LIB):" >> $NAME
		echo -e "\t@make -C \$(LIBPATH)" >> $NAME

		echo -e "\nlib: \$(LIB)" >> $NAME

		echo -e "\nlib.clean:" >> $NAME
		echo -e "\t@make -C \$(LIBPATH) clean" >> $NAME

		echo -e "\nlib.fclean:" >> $NAME
		echo -e "\t@make -C \$(LIBPATH) fclean" >> $NAME
	fi
fi
